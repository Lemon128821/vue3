<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.DepartmentMapper" >

  <resultMap id="BaseResultMap" type="com.pojo.Department" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="leader_id" property="leaderId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="modn_date" property="modnDate" jdbcType="VARCHAR" />
    <association property="department" column="parent_id" select="com.mapper.DepartmentMapper.selectByPrimaryKey"></association>
    <association property="leader" column="leader_id" select="com.mapper.EmployeeMapper.selectLeader"></association>
  </resultMap>

  <resultMap id="BaseResultMap2" type="com.pojo.Department" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="leader_id" property="leaderId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="modn_date" property="modnDate" jdbcType="VARCHAR" />
    <collection property="departments" column="id" select="com.mapper.DepartmentMapper.selectByPId"></collection>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByIds">
    delete from department
    where id in
    <foreach collection="ids" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>

  <insert id="insert" parameterType="com.pojo.Department" useGeneratedKeys="true" keyProperty="id" >
    insert into department (name, parent_id,
      leader_id, status,
      modn_date)
    values (#{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER},
      #{leaderId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR},
      #{modnDate,jdbcType=VARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.pojo.Department" >
    update department
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      leader_id = #{leaderId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      modn_date = #{modnDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, name, parent_id, leader_id, status, modn_date
    from department
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, parent_id, leader_id, status, modn_date
    from department
    <where>
      <if test="name != null and name != ''">
        name like concat('%',#{name},'%')
      </if>
    </where>
    order by parent_id
  </select>

  <select id="selectByPId" resultMap="BaseResultMap2">
    select id, name, parent_id, leader_id, status, modn_date
    from department
    where parent_id = #{parentId}
  </select>

  <select id="selectByFirst" resultMap="BaseResultMap2">
    select id, name, parent_id, leader_id, status, modn_date
    from department
    where parent_id = 0
  </select>

  <select id="selectByName" resultMap="BaseResultMap">
    select id, name, parent_id, leader_id, status, modn_date
    from department
    where name = #{name}
  </select>

  <select id="selectOptionalParentDepartment" resultMap="BaseResultMap">
    select id, name, parent_id, leader_id, status, modn_date
    from department
    <where>
      <if test="ids != null and ids.size() &gt; 0">
        id not in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
          #{id}
        </foreach>
      </if>
    </where>
  </select>

</mapper>