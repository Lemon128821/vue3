<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.Employee" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="emp_num" property="empNum" jdbcType="VARCHAR" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <association property="department" column="dept_id" select="com.mapper.DepartmentMapper.selectByPrimaryKey"></association>
    <association property="loginName" column="id" select="com.mapper.UserMapper.selectLoginNameByEmpId"></association>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByIds">
    delete from employee
    where id in
    <foreach collection="ids" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>

  <delete id="deleteByDeptIds">
    delete from employee
    where dept_id in
    <foreach collection="ids" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>

  <insert id="insert" parameterType="com.pojo.Employee" useGeneratedKeys="true" keyProperty="id" >
    insert into employee (name, emp_num,
      dept_id, phone, gender, email
      )
    values (#{name,jdbcType=VARCHAR}, #{empNum,jdbcType=VARCHAR},
      #{deptId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR},
      #{gender,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}
      )
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.pojo.Employee" >
    update employee
    set name = #{name,jdbcType=VARCHAR},
      emp_num = #{empNum,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, name, emp_num, dept_id, phone, gender, email
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, emp_num, dept_id, phone, gender, email
    from employee
    <where>
      <if test="name != null and name != ''">
        name like concat('%',#{name},'%')
      </if>
    </where>
    order by emp_num
  </select>

  <select id="selectByEmpNum" resultMap="BaseResultMap">
    select id, name, emp_num, dept_id, phone, gender, email
    from employee
    where emp_num = #{empNum}
  </select>

  <select id="selectLeader" resultType="java.lang.String">
    select name
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByDeptIds" resultType="java.lang.Integer">
    select id
    from employee
    where dept_id in
    <foreach collection="ids" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </select>

</mapper>